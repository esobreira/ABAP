*&---------------------------------------------------------------------*
*& Report  Z_J1B1_COPIA_NF
*& Eberton Sobreira - 14/10/2019
*& Criar nota fiscal por referência
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report z_j1b1_copia_nf.

tables: j_1bnfdoc, j_1bnflin.

types:
      begin of ty_header,
        "branch        like j_1bnfdoc-branch,  " Local de negócios
        bukrs         like j_1bnfdoc-bukrs,   " Empresa
        docnum        like j_1bnfdoc-docnum,
        nfenum        like j_1bnfdoc-nfenum,    "Nr NF-e
        docdat        like j_1bnfdoc-docdat,
        observat      like j_1bnfdoc-observat,
        nftype        like j_1bnfdoc-nftype,
        parid         like j_1bnfdoc-parid,
        parvw         like j_1bnfdoc-parvw,
        inco1         like j_1bnfdoc-inco1,
        inco2         like j_1bnfdoc-inco2,
        anzpk         like j_1bnfdoc-anzpk,
        shpunt        like j_1bnfdoc-shpunt,
        ntgew         like j_1bnfdoc-ntgew,
        brgew         like j_1bnfdoc-brgew,
        gewei         like j_1bnfdoc-gewei,
      end of ty_header,
      begin of ty_itens,
        itmnum  like  j_1bdylin-itmnum,
        itmtyp  like  j_1bdylin-itmtyp,
        matnr   like  j_1bdylin-matnr,
        werks   like  j_1bdylin-werks,
        maktx   like  j_1bdylin-maktx,
        matkl   like  j_1bdylin-matkl,
        menge   like  j_1bdylin-menge,
        meins   like  j_1bdylin-meins,
        netpr   like  j_1bdylin-netpr,
        netwr   like  j_1bdylin-netwr,
        cfop    like  j_1bdylin-cfop,
        taxlw1  like  j_1bdylin-taxlw1,
        taxlw2  like  j_1bdylin-taxlw2,
        matorg  like  j_1bdylin-matorg,
        matuse  like  j_1bdylin-matuse,
        nbm     like  j_1bdylin-nbm,
        taxlw4  like  j_1bdylin-taxlw4,
        taxlw5  like  j_1bdylin-taxlw5,
        docref  like  j_1bdylin-docref,
        itmref  like  j_1bdylin-itmref,
        cod_cta like  j_1bdylin-cod_cta,
     end of ty_itens,
     begin of ty_tax,
       itmnum   like  j_1bnfstx-itmnum,
       taxtyp   like  j_1bnfstx-taxtyp,
       base     like  j_1bnfstx-base,
       rate     like  j_1bnfstx-rate,
       taxval   like  j_1bnfstx-taxval,
       excbas   like  j_1bnfstx-excbas,
       othbas   like  j_1bnfstx-othbas,
     end of ty_tax,
     begin of ty_msg,
       seqnum   like  j_1bnfftx-seqnum,
       message  like  j_1bnfftx-message,
     end of ty_msg.

*Tabela Interna
data: ti_bdc      type table of bdcdata,
      ti_message  type table of bdcmsgcoll,
      ti_itens    type table of ty_itens,
      ti_tax      type table of ty_tax,
      ti_msg      type table of ty_msg.

*Work Area
data: wa_bdc      type bdcdata,
      wa_params   type ctu_params,
      wa_message  type bdcmsgcoll,
      wa_header   type ty_header,
      wa_item     type ty_itens,
      wa_tax      type ty_tax,
      wa_msg      type ty_msg.

* Variáveis
data:
      wx_idxtax         type i value 0,
      wx_countitens     type i value 0,
      wx_curitem        type i value 1,
      wx_curtax         type i value 0,
      wx_observacao     type j_1bnfdoc-observat,
      "wx_curdate(10)    type c,
      wx_refdocdate(10) type c,
      wx_newdate(10)    type c,
      wx_numnfe(9)      type c," VALUE '1',
      wx_ctanalit(10)   type c,
      wx_cfop(7)        type c,
      "wx_dirICMS(4)     type c,
      "wx_dirIPI(4)      type c,
      "wx_dirCOFINS(4)   type c,
      "wx_dirPIS(4)      type c,
      wx_docref         type j_1bnfdoc-docnum,
      wx_itmnum         type j_1bdylin-itmnum,
      wx_qttaxitem      type i,
      wx_qtmsgsori      type i,
      wx_netpr(16)      type c,
      wx_menge(16)      type c,
      wx_nextcode(5)    type c,
      wx_bundle(1)      type c value 'N'.   "Pacote. Sobrescreve Taxas, CFOP, etc.

data: wx_bun_taxlw1(3) type c, wx_bun_taxlw2(3) type c, wx_bun_taxlw4(3) type c, wx_bun_taxlw5(3) type c.

"Copiar de
selection-screen begin of block b1 with frame title text-t01.
parameters:      p_docnum       type j_1bnfdoc-docnum obligatory matchcode object j1ba.
selection-screen end of block b1.

"Para o Parceiro
selection-screen begin of block b2 with frame title text-t02.
parameters:      p_parvw        type j_1bdydoc-parvw,
                 p_parid        type j_1bdydoc-parid,
                 p_parid1       type j_1bdydoc-parid.
selection-screen end of block b2.

"Com os parâmetros
selection-screen begin of block b3 with frame title text-t03.
  parameters: p_branch       type j_1bnfdoc-branch obligatory,  "Local de negócios
              p_nftype    type j_1bnfdoc-nftype,  "Categoria NF
              p_docdat    type j_1bnfdoc-docdat obligatory,  "Data do Documento
              p_nvcfop    type j_1bdylin-cfop,    "Novo CFOP
              "P_NVICMS    TYPE J_1BDYLIN-TAXLW1,  "Novo Direito Fiscal ICMS
              "P_NVIPI     TYPE J_1BDYLIN-TAXLW2,  "Novo Direito Fiscal IPI
              "P_NVCOFI    TYPE J_1BDYLIN-TAXLW4,  "Novo Direito Fiscal COFINS
              "P_NVPIS     TYPE J_1BDYLIN-TAXLW5,  "Novo Direito Fiscal PIS
              p_ctanl     type j_1bdylin-cod_cta, "Código Conta Analítica
              p_observ    type j_1bnfdoc-observat,
              p_savref    as checkbox.  "Gera na observação texto ref. a nf de origem e cria referência.
selection-screen end of block b3.

"Opções pré configuradas
selection-screen begin of block b4 with frame title text-t04.
  parameters: p_cfeira      as checkbox.  "NF de Entrada de Retorno de Feira/Exposição
              "p_fmth6         as checkbox,  "Indica que é pra exportar registros da Construção Civil.
selection-screen end of block b4.

*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
* P_CFEIRA - NF de Entrada de Retorno de Feira/Exposição
* Ctg.NF - I0
* 50 (Suspenso) - Direito ICMS
* 49 (Outras) - Direito IPI
* 1914/2914 - CFOP
* OBSERVAÇÃO. REF NF 000XXX DE XX.XX.XXXX
*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


initialization.

p_docdat = sy-datum.
wx_bundle = 'N'.

start-of-selection.

if p_cfeira eq 'X'.
*  Obrigar a informar o CFOP.
  wx_bun_taxlw1 = '50'. "ICMS
  wx_bun_taxlw2 = '49'. "IPI
  wx_bun_taxlw4 = 'C08'.  "COFINS
  wx_bun_taxlw5 = 'P08'.  "PIS
  p_nvcfop = '1914/AA'.    "Se ocorrer erro no CFOP a J1B1N vai chiar.
  p_savref = 'X'.
  p_nftype = 'I0'.
  wx_bundle = 'S'.
endif.

"-- Primeiro Uso desta Aplicação:
"   -- Dar entrada de Notas Fiscais de Remessa de Exporição/Feira (5914/6914) como (1914)

select "branch
      bukrs     "Empresa
      docnum
      nfenum     "Nr NFe
      docdat    "Data do Documento
      observat
      nftype
      parid
      parvw
      inco1
      inco2
      anzpk
      shpunt
      ntgew
      brgew
      gewei
  into corresponding fields of wa_header
  from j_1bnfdoc
 where bukrs eq 'BR30' and
       docnum eq p_docnum.       "Nr Docto
       "doctyp eq 1.             "Nota fiscal
       "direct eq 2.             "Saída
endselect.

if sy-subrc ne 0.
  message 'Documento não encontrado.' type 'I'.
  stop.
endif.

* Data de Hoje
"write SY-DATUM to wx_curdate dd/mm/yyyy.
*replace all occurrences of '.' in wx_curdate with '/'.

* Data do Novo Documento
write p_docdat to wx_newdate dd/mm/yyyy.
replace all occurrences of '/' in wx_newdate with '.'.

* Data do Documento
write wa_header-docdat to wx_refdocdate dd/mm/yyyy.
*replace all occurrences of '.' in wx_refdocdate with '/'.

* NumNFe
write wa_header-nfenum to wx_numnfe.

"wx_numnfe = '256856'.

data nfeformat(9) type n.

unpack wx_numnfe to nfeformat.

* Docto de Referência.
write wa_header-docnum to wx_docref.

* ************************
*      HEADER DA NF
* ************************

data: wx_nftype(2) type c, wx_parid(10) type c, wx_parvw(2) type c.

if p_nftype is initial.
  wx_nftype = wa_header-nftype.
else.
  wx_nftype = p_nftype.
endif.

if p_parid is initial.
  wx_parid = wa_header-parid.

else.
  wx_parid = p_parid.

  "Se informou parceiro tem que informar a função.
  if p_parvw is initial.
    message 'Se informar o Parceiro tem que informar a Função do Parceiro.' type 'I'.
    stop.
  endif.
endif.

if p_parvw is initial.
  wx_parvw = wa_header-parvw.
else.
  wx_parvw = p_parvw.

  "Se informou função parceiro tem que informar parceiro.
  if p_parid is initial.
    message 'Se informar a Função do Parceiro, tem que informar o ID do Parceiro.' type 'I'.
    stop.
  endif.
endif.

* TELA INICIAL
perform f_load_bdcdata using:
            'X' 'SAPMJ1B1'   '0900',
            ' ' 'J_1BDYDOC-NFTYPE' wx_nftype,    "i0, i1, i8, etc...
            ' ' 'J_1BDYDOC-BUKRS'  wa_header-bukrs,   "Empresa
            ' ' 'J_1BDYDOC-BRANCH' p_branch,          "Local de negócios
            ' ' 'J_1BDYDOC-PARVW'  wx_parvw,
            ' ' 'J_1BDYDOC-PARID'  wx_parid,
            ' ' 'J_1BDYLIN-INCLTX' 'X'.

if p_savref eq 'X'.
  "REF NF 000123456 DE 01/01/2019'
  wx_observacao = 'REF NF % DE & '.
  replace '%' in wx_observacao with nfeformat.
  replace '&' in wx_observacao with wx_refdocdate.

  perform f_load_bdcdata using:
              'X' 'SAPLJ1BB2'   '2000',
              ' ' 'J_1BDYDOC-DOCDAT' wx_newdate,
              ' ' 'J_1BDYDOC-OBSERVAT' wx_observacao,
              ' ' 'J_1BDYDOC-DOCREF'  wa_header-docnum,
              ' ' 'BDC_OKCODE'  '=ADIT'.
else.
  perform f_load_bdcdata using:
              'X' 'SAPLJ1BB2'   '2000',
              ' ' 'J_1BDYDOC-DOCDAT' wx_newdate,
              ' ' 'J_1BDYDOC-OBSERVAT' p_observ,
              ' ' 'BDC_OKCODE'  '=ADIT'.
endif.

* ************************
*      ITENS DA NF
* ************************

* Qtde Itens NF
select count( * )
   into wx_countitens
   from j_1bnflin
  where docnum eq p_docnum.

* Obter Itens da NF
select itmnum
      itmtyp
      matnr
      werks
      maktx
      matkl
      menge
      meins
      netpr
      netwr
      cfop
      taxlw1
      taxlw2
      matorg
      matuse
      nbm
      taxlw4
      taxlw5
      docref
      itmref
      cod_cta
   into table ti_itens
   from j_1bnflin
  where docnum eq p_docnum.

*IF p_nvicms IS INITIAL.
*  wx_diricms = wa_item-taxlw1.
*ELSE.
*  wx_diricms = p_nvicms.
*ENDIF.
*
*IF p_nvipi IS INITIAL.
*  wx_diripi = wa_item-taxlw2.
*ELSE.
*  wx_diripi = p_nvipi.
*ENDIF.
*
*IF p_nvcofi IS INITIAL.
*  wx_dircofins = wa_item-taxlw4.
*ELSE.
*  wx_dircofins = p_nvcofi.
*ENDIF.
*
*IF p_nvpis IS INITIAL.
*  wx_dirpis = wa_item-taxlw5.
*ELSE.
*  wx_dirpis = p_nvpis.
*ENDIF.

if p_ctanl is initial.
  wx_ctanalit = wa_item-cod_cta.
else.
  wx_ctanalit = p_ctanl.
endif.

loop at ti_itens into wa_item.

  wx_itmnum = 0.
  if p_savref eq 'X'.
    wx_itmnum = wa_item-itmnum.
  endif.

  data wx_newcfop(7) type c.

  if p_nvcfop is initial.
    "Se não informado, copia.
    wx_cfop = wa_item-cfop.
  else.
    "Se informado, pega o novo.
    wx_cfop = p_nvcfop.
  endif.

  concatenate wx_cfop(4) '/' wx_cfop+4 into wx_newcfop.

  data wx_meins(3) type c.

  write wa_item-meins to wx_meins.
  write wa_item-netpr to wx_netpr no-zero.
  write wa_item-menge to wx_menge no-zero.

  if wx_bundle eq 'S'.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYLIN-ITMTYP' wa_item-itmtyp,
                ' ' 'J_1BDYLIN-MATNR' wa_item-matnr,
                ' ' 'J_1BDYLIN-WERKS' wa_item-werks,
                ' ' 'J_1BDYLIN-MAKTX' wa_item-maktx,
                ' ' 'J_1BDYLIN-MATKL' wa_item-matkl,
                ' ' 'J_1BDYLIN-MENGE' wx_menge,
                ' ' 'J_1BDYLIN-MEINS' wx_meins,
                ' ' 'J_1BDYLIN-NETPR' wx_netpr,
                ' ' 'J_1BDYLIN-CFOP' p_nvcfop,
                ' ' 'J_1BDYLIN-TAXLW1' wx_bun_taxlw1,    "Direitos ICMS
                ' ' 'J_1BDYLIN-TAXLW2' wx_bun_taxlw2,    "Direitos IPI
                ' ' 'J_1BDYLIN-MATORG' wa_item-matorg,
                ' ' 'J_1BDYLIN-MATUSE' wa_item-matuse,
                ' ' 'J_1BDYLIN-NBM' wa_item-nbm,
                ' ' 'J_1BDYLIN-TAXLW4' wx_bun_taxlw4,   "Direitos COFINS
                ' ' 'J_1BDYLIN-TAXLW5' wx_bun_taxlw5,   "Direitos PIS
                ' ' 'J_1BDYLIN-DOCREF' wx_docref,   "Nr Doc original
                ' ' 'J_1BDYLIN-ITMREF' wx_itmnum,     "Item Doc Original
                ' ' 'J_1BDYLIN-COD_CTA' wx_ctanalit,
                ' ' 'BDC_OKCODE'  '=TAX'.

  else.

    if p_savref eq 'X'.

      perform f_load_bdcdata using:
                  'X' 'SAPLJ1BB2'   '3000',
                  ' ' 'J_1BDYLIN-ITMTYP' wa_item-itmtyp,
                  ' ' 'J_1BDYLIN-MATNR' wa_item-matnr,
                  ' ' 'J_1BDYLIN-WERKS' wa_item-werks,
                  ' ' 'J_1BDYLIN-MAKTX' wa_item-maktx,
                  ' ' 'J_1BDYLIN-MATKL' wa_item-matkl,
                  ' ' 'J_1BDYLIN-MENGE' wx_menge,
                  ' ' 'J_1BDYLIN-MEINS' wx_meins,
                  ' ' 'J_1BDYLIN-NETPR' wx_netpr,           "Preço (da j1b1 aba Item)
                  ' ' 'J_1BDYLIN-CFOP' wx_newcfop,
                  ' ' 'J_1BDYLIN-TAXLW1' wa_item-taxlw1,    "Direitos ICMS
                  ' ' 'J_1BDYLIN-TAXLW2' wa_item-taxlw2,    "Direitos IPI
                  ' ' 'J_1BDYLIN-MATORG' wa_item-matorg,
                  ' ' 'J_1BDYLIN-MATUSE' wa_item-matuse,
                  ' ' 'J_1BDYLIN-NBM' wa_item-nbm,
                  ' ' 'J_1BDYLIN-TAXLW4' wa_item-taxlw4,   "Direitos COFINS
                  ' ' 'J_1BDYLIN-TAXLW5' wa_item-taxlw5,   "Direitos PIS
                  ' ' 'J_1BDYLIN-DOCREF' wx_docref,   "Nr Doc original
                  ' ' 'J_1BDYLIN-ITMREF' wx_itmnum,     "Item Doc Original
                  ' ' 'J_1BDYLIN-COD_CTA' wx_ctanalit,
                  ' ' 'BDC_OKCODE'  '=TAX'.

    else.

      perform f_load_bdcdata using:
                  'X' 'SAPLJ1BB2'   '3000',
                  ' ' 'J_1BDYLIN-ITMTYP' wa_item-itmtyp,
                  ' ' 'J_1BDYLIN-MATNR' wa_item-matnr,
                  ' ' 'J_1BDYLIN-WERKS' wa_item-werks,
                  ' ' 'J_1BDYLIN-MAKTX' wa_item-maktx,
                  ' ' 'J_1BDYLIN-MATKL' wa_item-matkl,
                  ' ' 'J_1BDYLIN-MENGE' wx_menge,
                  ' ' 'J_1BDYLIN-MEINS' wx_meins,
                  ' ' 'J_1BDYLIN-NETPR' wx_netpr,           "Preço (da j1b1 aba Item)
                  ' ' 'J_1BDYLIN-CFOP' wx_newcfop,
                  ' ' 'J_1BDYLIN-TAXLW1' wa_item-taxlw1,    "Direitos ICMS
                  ' ' 'J_1BDYLIN-TAXLW2' wa_item-taxlw2,    "Direitos IPI
                  ' ' 'J_1BDYLIN-MATORG' wa_item-matorg,
                  ' ' 'J_1BDYLIN-MATUSE' wa_item-matuse,
                  ' ' 'J_1BDYLIN-NBM' wa_item-nbm,
                  ' ' 'J_1BDYLIN-TAXLW4' wa_item-taxlw4,   "Direitos COFINS
                  ' ' 'J_1BDYLIN-TAXLW5' wa_item-taxlw5,   "Direitos PIS
                  ' ' 'J_1BDYLIN-COD_CTA' wx_ctanalit,
                  ' ' 'BDC_OKCODE'  '=TAX'.

    endif.

  endif.

  "Conta a qtde de impostos do item atual.
  select count( * )
    from j_1bnfstx
    into wx_qttaxitem
   where docnum eq p_docnum and
         itmnum eq wa_item-itmnum.

*  IF wx_qttaxitem > 4.
*    "if sy-subrc ne 0.
*      message 'Erro ao localizar os impostos. Condicao nao esperada' type 'W'.
*      stop.
*    "endif.
*  ENDIF.

  if wx_bundle eq 'S'.

    if p_cfeira eq 'X'. "Retorno Rem. Feira/Exposição

      if wx_qttaxitem > 4.

        message 'Retorno Rem. Feira/Exposição requer NF de referência com 4 Taxes apenas, ICMS, IPI PIS e COFINS.' type 'W'.
        stop.

      endif.

    endif.

  endif.

  "Seleciona os Impostos.
  select itmnum
        taxtyp
        base
        rate
        taxval
        excbas
        othbas
     into table ti_tax
     from j_1bnfstx
    where docnum eq p_docnum and
          itmnum eq wa_item-itmnum.

  wx_idxtax = 1.

  data: taxtyp_1(20) type c, base_1(20) type c, rate_1(20) type c, taxval_1(20) type c, excbas_1(20) type c, othbas_1(20) type c.
  data: taxtyp_2(20) type c, base_2(20) type c, rate_2(20) type c, taxval_2(20) type c, excbas_2(20) type c, othbas_2(20) type c.
  data: taxtyp_3(20) type c, base_3(20) type c, rate_3(20) type c, taxval_3(20) type c, excbas_3(20) type c, othbas_3(20) type c.
  data: taxtyp_4(20) type c, base_4(20) type c, rate_4(20) type c, taxval_4(20) type c, excbas_4(20) type c, othbas_4(20) type c.
  data: taxtyp_5(20) type c, base_5(20) type c, rate_5(20) type c, taxval_5(20) type c, excbas_5(20) type c, othbas_5(20) type c.
  data: taxtyp_6(20) type c, base_6(20) type c, rate_6(20) type c, taxval_6(20) type c, excbas_6(20) type c, othbas_6(20) type c.
  data: taxtyp_7(20) type c, base_7(20) type c, rate_7(20) type c, taxval_7(20) type c, excbas_7(20) type c, othbas_7(20) type c.
  data: taxtyp_8(20) type c, base_8(20) type c, rate_8(20) type c, taxval_8(20) type c, excbas_8(20) type c, othbas_8(20) type c.

  " Loop nos Impostos para coletar.
  " Está feio isso mas é o que tem pra hoje. =(
  loop at ti_tax into wa_tax.

    data: wx_base(15) type c, wx_rate(6) type c, wx_taxval(15) type c, wx_excbas(15) type c, wx_othbas(15) type c, wx_netwr_item(15) type c.

    write wa_tax-base to wx_base no-zero.
    write wa_tax-rate to wx_rate no-zero.
    write wa_tax-taxval to wx_taxval no-zero.
    write wa_tax-excbas to wx_excbas no-zero.
    write wa_tax-othbas to wx_othbas no-zero.
    write wa_item-netwr to wx_netwr_item decimals 2.

    if wx_idxtax eq 1.  " ICMS
      taxtyp_1 = wa_tax-taxtyp.
      base_1 = wx_base.
      rate_1 = wx_rate.
      taxval_1 = wx_taxval.
      excbas_1 = wx_excbas.
      othbas_1 = wx_othbas.
    endif.

    if wx_idxtax eq 2.  " IPI
      taxtyp_2 = wa_tax-taxtyp.
      base_2 = wx_base.
      rate_2 = wx_rate.
      taxval_2 = wx_taxval.
      excbas_2 = wx_excbas.
      othbas_2 = wx_othbas.
    endif.

    if wx_idxtax eq 3.  "COFINS
      taxtyp_3 = wa_tax-taxtyp.
      base_3 = wx_base.
      rate_3 = wx_rate.
      taxval_3 = wx_taxval.
      excbas_3 = wx_excbas.
      othbas_3 = wx_othbas.
    endif.

    if wx_idxtax eq 4.
      taxtyp_4 = wa_tax-taxtyp. "PIS
      base_4 = wx_base.
      rate_4 = wx_rate.
      taxval_4 = wx_taxval.
      excbas_4 = wx_excbas.
      othbas_4 = wx_othbas.
    endif.

    if wx_idxtax eq 5.
      taxtyp_5 = wa_tax-taxtyp.
      base_5 = wx_base.
      rate_5 = wx_rate.
      taxval_5 = wx_taxval.
      excbas_5 = wx_excbas.
      othbas_5 = wx_othbas.
    endif.

    if wx_idxtax eq 6.
      taxtyp_6 = wa_tax-taxtyp.
      base_6 = wx_base.
      rate_6 = wx_rate.
      taxval_6 = wx_taxval.
      excbas_6 = wx_excbas.
      othbas_6 = wx_othbas.
    endif.

    if wx_idxtax eq 7.
      taxtyp_7 = wa_tax-taxtyp.
      base_7 = wx_base.
      rate_7 = wx_rate.
      taxval_7 = wx_taxval.
      excbas_7 = wx_excbas.
      othbas_7 = wx_othbas.
    endif.

    if wx_idxtax eq 8.
      taxtyp_8 = wa_tax-taxtyp.
      base_8 = wx_base.
      rate_8 = wx_rate.
      taxval_8 = wx_taxval.
      excbas_8 = wx_excbas.
      othbas_8 = wx_othbas.
    endif.

    wx_idxtax = wx_idxtax + 1.

  endloop.

  "Tem que direcionar os valores determinados pelos Direitos Fiscais em seu devido campo.
  "50 - ICMS OUTRAS
  "49 - IPI OUTRAS
  if wx_bundle eq 'S'.

    if p_cfeira eq 'X'.

        taxtyp_1 = 'ICM0'. "ICMS
        base_1 = '0'.
        rate_1 = '0'.
        taxval_1 = '0'.
        excbas_1 = '0'.
        othbas_1 = wx_netwr_item.
        "OTHBAS_1 = WA_ITEM-netpr.

        taxtyp_2 = 'IPI0'. "IPI
        base_2 = '0'.
        rate_2 = '0'.
        taxval_2 = '0'.
        excbas_2 = '0'.
        othbas_2 = wx_netwr_item.
        "OTHBAS_2 = WA_ITEM-netpr.

        taxtyp_3 = 'ZCO1'. "COFINS
        base_3 = '0'.
        rate_3 = '0'.
        taxval_3 = '0'.
        excbas_3 = wx_netwr_item.
        "EXCBAS_3 = wa_item-netpr.
        othbas_3 = '0'.

        taxtyp_4 = 'ZPI1'. "PIS
        base_4 = '0'.
        rate_4 = '0'.
        taxval_4 = '0'.
        excbas_4 = wx_netwr_item.
        "EXCBAS_4 = wa_item-netpr.
        othbas_4 = '0'.

    endif.

  endif.

  "Salva os impostos
  if wx_qttaxitem eq 1.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 2.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 3.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'J_1BDYSTX-TAXTYP(03)' taxtyp_3,
                ' ' 'J_1BDYSTX-BASE(03)' base_3,
                ' ' 'J_1BDYSTX-RATE(03)' rate_3,
                ' ' 'J_1BDYSTX-TAXVAL(03)' taxval_3,
                ' ' 'J_1BDYSTX-EXCBAS(03)' excbas_3,
                ' ' 'J_1BDYSTX-OTHBAS(03)' othbas_3,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 4.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'J_1BDYSTX-TAXTYP(03)' taxtyp_3,
                ' ' 'J_1BDYSTX-BASE(03)' base_3,
                ' ' 'J_1BDYSTX-RATE(03)' rate_3,
                ' ' 'J_1BDYSTX-TAXVAL(03)' taxval_3,
                ' ' 'J_1BDYSTX-EXCBAS(03)' excbas_3,
                ' ' 'J_1BDYSTX-OTHBAS(03)' othbas_3,
                ' ' 'J_1BDYSTX-TAXTYP(04)' taxtyp_4,
                ' ' 'J_1BDYSTX-BASE(04)' base_4,
                ' ' 'J_1BDYSTX-RATE(04)' rate_4,
                ' ' 'J_1BDYSTX-TAXVAL(04)' taxval_4,
                ' ' 'J_1BDYSTX-EXCBAS(04)' excbas_4,
                ' ' 'J_1BDYSTX-OTHBAS(04)' othbas_4,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 5.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'J_1BDYSTX-TAXTYP(03)' taxtyp_3,
                ' ' 'J_1BDYSTX-BASE(03)' base_3,
                ' ' 'J_1BDYSTX-RATE(03)' rate_3,
                ' ' 'J_1BDYSTX-TAXVAL(03)' taxval_3,
                ' ' 'J_1BDYSTX-EXCBAS(03)' excbas_3,
                ' ' 'J_1BDYSTX-OTHBAS(03)' othbas_3,
                ' ' 'J_1BDYSTX-TAXTYP(04)' taxtyp_4,
                ' ' 'J_1BDYSTX-BASE(04)' base_4,
                ' ' 'J_1BDYSTX-RATE(04)' rate_4,
                ' ' 'J_1BDYSTX-TAXVAL(04)' taxval_4,
                ' ' 'J_1BDYSTX-EXCBAS(04)' excbas_4,
                ' ' 'J_1BDYSTX-OTHBAS(04)' othbas_4,
                ' ' 'J_1BDYSTX-TAXTYP(05)' taxtyp_5,
                ' ' 'J_1BDYSTX-BASE(05)' base_5,
                ' ' 'J_1BDYSTX-RATE(05)' rate_5,
                ' ' 'J_1BDYSTX-TAXVAL(05)' taxval_5,
                ' ' 'J_1BDYSTX-EXCBAS(05)' excbas_5,
                ' ' 'J_1BDYSTX-OTHBAS(05)' othbas_5,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 6.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'J_1BDYSTX-TAXTYP(03)' taxtyp_3,
                ' ' 'J_1BDYSTX-BASE(03)' base_3,
                ' ' 'J_1BDYSTX-RATE(03)' rate_3,
                ' ' 'J_1BDYSTX-TAXVAL(03)' taxval_3,
                ' ' 'J_1BDYSTX-EXCBAS(03)' excbas_3,
                ' ' 'J_1BDYSTX-OTHBAS(03)' othbas_3,
                ' ' 'J_1BDYSTX-TAXTYP(04)' taxtyp_4,
                ' ' 'J_1BDYSTX-BASE(04)' base_4,
                ' ' 'J_1BDYSTX-RATE(04)' rate_4,
                ' ' 'J_1BDYSTX-TAXVAL(04)' taxval_4,
                ' ' 'J_1BDYSTX-EXCBAS(04)' excbas_4,
                ' ' 'J_1BDYSTX-OTHBAS(04)' othbas_4,
                ' ' 'J_1BDYSTX-TAXTYP(05)' taxtyp_5,
                ' ' 'J_1BDYSTX-BASE(05)' base_5,
                ' ' 'J_1BDYSTX-RATE(05)' rate_5,
                ' ' 'J_1BDYSTX-TAXVAL(05)' taxval_5,
                ' ' 'J_1BDYSTX-EXCBAS(05)' excbas_5,
                ' ' 'J_1BDYSTX-OTHBAS(05)' othbas_5,
                ' ' 'J_1BDYSTX-TAXTYP(06)' taxtyp_6,
                ' ' 'J_1BDYSTX-BASE(06)' base_6,
                ' ' 'J_1BDYSTX-RATE(06)' rate_6,
                ' ' 'J_1BDYSTX-TAXVAL(06)' taxval_6,
                ' ' 'J_1BDYSTX-EXCBAS(06)' excbas_6,
                ' ' 'J_1BDYSTX-OTHBAS(06)' othbas_6,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 7.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'J_1BDYSTX-TAXTYP(03)' taxtyp_3,
                ' ' 'J_1BDYSTX-BASE(03)' base_3,
                ' ' 'J_1BDYSTX-RATE(03)' rate_3,
                ' ' 'J_1BDYSTX-TAXVAL(03)' taxval_3,
                ' ' 'J_1BDYSTX-EXCBAS(03)' excbas_3,
                ' ' 'J_1BDYSTX-OTHBAS(03)' othbas_3,
                ' ' 'J_1BDYSTX-TAXTYP(04)' taxtyp_4,
                ' ' 'J_1BDYSTX-BASE(04)' base_4,
                ' ' 'J_1BDYSTX-RATE(04)' rate_4,
                ' ' 'J_1BDYSTX-TAXVAL(04)' taxval_4,
                ' ' 'J_1BDYSTX-EXCBAS(04)' excbas_4,
                ' ' 'J_1BDYSTX-OTHBAS(04)' othbas_4,
                ' ' 'J_1BDYSTX-TAXTYP(05)' taxtyp_5,
                ' ' 'J_1BDYSTX-BASE(05)' base_5,
                ' ' 'J_1BDYSTX-RATE(05)' rate_5,
                ' ' 'J_1BDYSTX-TAXVAL(05)' taxval_5,
                ' ' 'J_1BDYSTX-EXCBAS(05)' excbas_5,
                ' ' 'J_1BDYSTX-OTHBAS(05)' othbas_5,
                ' ' 'J_1BDYSTX-TAXTYP(06)' taxtyp_6,
                ' ' 'J_1BDYSTX-BASE(06)' base_6,
                ' ' 'J_1BDYSTX-RATE(06)' rate_6,
                ' ' 'J_1BDYSTX-TAXVAL(06)' taxval_6,
                ' ' 'J_1BDYSTX-EXCBAS(06)' excbas_6,
                ' ' 'J_1BDYSTX-OTHBAS(06)' othbas_6,
                ' ' 'J_1BDYSTX-TAXTYP(07)' taxtyp_7,
                ' ' 'J_1BDYSTX-BASE(07)' base_7,
                ' ' 'J_1BDYSTX-RATE(07)' rate_7,
                ' ' 'J_1BDYSTX-TAXVAL(07)' taxval_7,
                ' ' 'J_1BDYSTX-EXCBAS(07)' excbas_7,
                ' ' 'J_1BDYSTX-OTHBAS(07)' othbas_7,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  elseif wx_qttaxitem eq 8.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '3000',
                ' ' 'J_1BDYSTX-TAXTYP(01)' taxtyp_1,
                ' ' 'J_1BDYSTX-BASE(01)' base_1,
                ' ' 'J_1BDYSTX-RATE(01)' rate_1,
                ' ' 'J_1BDYSTX-TAXVAL(01)' taxval_1,
                ' ' 'J_1BDYSTX-EXCBAS(01)' excbas_1,
                ' ' 'J_1BDYSTX-OTHBAS(01)' othbas_1,
                ' ' 'J_1BDYSTX-TAXTYP(02)' taxtyp_2,
                ' ' 'J_1BDYSTX-BASE(02)' base_2,
                ' ' 'J_1BDYSTX-RATE(02)' rate_2,
                ' ' 'J_1BDYSTX-TAXVAL(02)' taxval_2,
                ' ' 'J_1BDYSTX-EXCBAS(02)' excbas_2,
                ' ' 'J_1BDYSTX-OTHBAS(02)' othbas_2,
                ' ' 'J_1BDYSTX-TAXTYP(03)' taxtyp_3,
                ' ' 'J_1BDYSTX-BASE(03)' base_3,
                ' ' 'J_1BDYSTX-RATE(03)' rate_3,
                ' ' 'J_1BDYSTX-TAXVAL(03)' taxval_3,
                ' ' 'J_1BDYSTX-EXCBAS(03)' excbas_3,
                ' ' 'J_1BDYSTX-OTHBAS(03)' othbas_3,
                ' ' 'J_1BDYSTX-TAXTYP(04)' taxtyp_4,
                ' ' 'J_1BDYSTX-BASE(04)' base_4,
                ' ' 'J_1BDYSTX-RATE(04)' rate_4,
                ' ' 'J_1BDYSTX-TAXVAL(04)' taxval_4,
                ' ' 'J_1BDYSTX-EXCBAS(04)' excbas_4,
                ' ' 'J_1BDYSTX-OTHBAS(04)' othbas_4,
                ' ' 'J_1BDYSTX-TAXTYP(05)' taxtyp_5,
                ' ' 'J_1BDYSTX-BASE(05)' base_5,
                ' ' 'J_1BDYSTX-RATE(05)' rate_5,
                ' ' 'J_1BDYSTX-TAXVAL(05)' taxval_5,
                ' ' 'J_1BDYSTX-EXCBAS(05)' excbas_5,
                ' ' 'J_1BDYSTX-OTHBAS(05)' othbas_5,
                ' ' 'J_1BDYSTX-TAXTYP(06)' taxtyp_6,
                ' ' 'J_1BDYSTX-BASE(06)' base_6,
                ' ' 'J_1BDYSTX-RATE(06)' rate_6,
                ' ' 'J_1BDYSTX-TAXVAL(06)' taxval_6,
                ' ' 'J_1BDYSTX-EXCBAS(06)' excbas_6,
                ' ' 'J_1BDYSTX-OTHBAS(06)' othbas_6,
                ' ' 'J_1BDYSTX-TAXTYP(07)' taxtyp_7,
                ' ' 'J_1BDYSTX-BASE(07)' base_7,
                ' ' 'J_1BDYSTX-RATE(07)' rate_7,
                ' ' 'J_1BDYSTX-TAXVAL(07)' taxval_7,
                ' ' 'J_1BDYSTX-EXCBAS(07)' excbas_7,
                ' ' 'J_1BDYSTX-OTHBAS(07)' othbas_7,
                ' ' 'J_1BDYSTX-TAXTYP(08)' taxtyp_8,
                ' ' 'J_1BDYSTX-BASE(08)' base_8,
                ' ' 'J_1BDYSTX-RATE(08)' rate_8,
                ' ' 'J_1BDYSTX-TAXVAL(08)' taxval_8,
                ' ' 'J_1BDYSTX-EXCBAS(08)' excbas_8,
                ' ' 'J_1BDYSTX-OTHBAS(08)' othbas_8,
                ' ' 'BDC_OKCODE'  '=TAB1'.

  endif.

  "Se é o último item, tem que ir para o Tab3 de Parceiro.
  if wx_curitem eq wx_countitens.

    "Vai pra tela de Parceiros
    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '2000',
                ' ' 'BDC_OKCODE'  '=TAB3'.

  else.

    "Adiciona novo item.
    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '2000',
                ' ' 'BDC_OKCODE'  '=ADIT'.
  endif.

  wx_curitem = wx_curitem + 1.

endloop.

"Conta a qtde de msgs da nf original (com as msgs automaticas).
select count( * )
  from j_1bnfftx
  into wx_qtmsgsori
 where docnum eq p_docnum.
   "AND MANUAL EQ 'X'.

"GOTO Mensagens
wx_nextcode = '=TAB4'.

"Se não tiver mensagem vai direto para a Tela de Transporte.
if wx_qtmsgsori eq 0.
  "GOTO Transporte
  wx_nextcode = '=TAB5'.
endif.

* Parceiro 2300
if p_parid1 is initial.
  perform f_load_bdcdata using:
              'X' 'SAPLJ1BB2'   '2000',
              ' ' 'J_1BDYNAD-PARVW(01)' p_parvw,
              ' ' 'J_1BDYNAD-PARID(01)' p_parid,
              ' ' 'BDC_OKCODE'  wx_nextcode.

              "' ' 'BDC_OKCODE'  '=TAB4'.    "Vai pra tela de Mensagens
else.
  perform f_load_bdcdata using:
            'X' 'SAPLJ1BB2'   '2000',
            ' ' 'J_1BDYNAD-PARVW(01)' p_parvw,
            ' ' 'J_1BDYNAD-PARID(01)' p_parid,
            ' ' 'J_1BDYNAD-PARVW(02)' 'SP',
            ' ' 'J_1BDYNAD-PARID(02)' p_parid1, "Parid do Transportador
            ' ' 'BDC_OKCODE'  wx_nextcode.

            "' ' 'BDC_OKCODE'  '=TAB4'.    "Vai pra tela de Mensagens
endif.

* MENSAGENS
if wx_nextcode eq '=TAB4'.

  data fieldmsg(20) type c.
  data wx_idxmsg type n value 0.
  data qtdemsgsori type i value 0.

  "Não copia mensagens automáticas.
  select seqnum message
    into table ti_msg
    from j_1bnfftx
   where docnum eq p_docnum
     and manual eq 'X'
    order by seqnum.

  "Salva msgs a partir da qtde msg da nf original.
  wx_idxmsg = wx_qtmsgsori.

  loop at ti_msg into wa_msg.

    wx_idxmsg = wx_idxmsg + 1.

    concatenate 'J_1BDYFTX-MESSAGE(' wx_idxmsg ')' into fieldmsg.

    perform f_load_bdcdata using:
                'X' 'SAPLJ1BB2'   '2000',
                ' ' fieldmsg wa_msg-message.

  endloop.

  "Termina as msgs e vai para Transporte.
  perform f_load_bdcdata using:
              'X' 'SAPLJ1BB2'   '2000',
              ' ' 'BDC_OKCODE'  '=TAB5'.

endif.

data: wx_anzpk(5) type c, wx_ntgew(15) type c, wx_brgew(15) type c, wx_shpunt(3) type c.

write wa_header-anzpk to wx_anzpk no-zero.
write wa_header-ntgew to wx_ntgew no-zero.
write wa_header-brgew to wx_brgew no-zero.
write wa_header-shpunt to wx_shpunt.

* Transporte
perform f_load_bdcdata using:
            'X' 'SAPLJ1BB2'   '2000',
            ' ' 'J_1BDYDOC-INCO1' wa_header-inco1,
            ' ' 'J_1BDYDOC-INCO2' wa_header-inco2,
            ' ' 'J_1BDYDOC-ANZPK' wa_header-anzpk,   "Qtde
            ' ' 'J_1BDYDOC-SHPUNT' wx_shpunt,  "Volume
            ' ' 'J_1BDYDOC-NTGEW' wx_ntgew,  "Peso Líquido
            ' ' 'J_1BDYDOC-BRGEW' wx_brgew,  "Peso Bruto
            ' ' 'J_1BDYDOC-GEWEI' wa_header-gewei,  "Unidade de Peso
            ' ' 'BDC_OKCODE'  '=TAB1'.    "Vai pra Tela Inicial

*PERFORM f_load_bdcdata USING:
*            'X' 'SAPLJ1BB2'   '2000',
*            ' ' 'BDC_OKCODE'  '=SAVE'.

wa_params-dismode  = 'A'. " ( A - Visivel N - Background )
wa_params-racommit = 'X'.

call transaction 'J1B1N'
           using ti_bdc
            mode 'E'   "Errors only
    "OPTIONS FROM wa_params
   messages into ti_message. "Retorno do sucesso ou fracasso do batch input.

"Message 'Cópia da NF concluída. CONFIRME OS DADOS ANTES DE SALVAR!!!' type 'S' DISPLAY LIKE 'E'.

data vl_msg type string. "STRING É IGUAL CHAR, VAI AUTOMÁTICO DE ACORDO COM O TEXTO

loop at ti_message into wa_message.

call function 'MESSAGE_TEXT_BUILD'
  exporting
    msgid                     = wa_message-msgid
    msgnr                     = wa_message-msgnr
    msgv1                     = wa_message-msgv1
    msgv2                     = wa_message-msgv2
 importing
   message_text_output        = vl_msg.

write / vl_msg.

endloop.

*&---------------------------------------------------------------------*
*&      Form  F_LOAD_BDCDATA
*&---------------------------------------------------------------------*
form f_load_bdcdata using p_x
                          p_2
                          p_3.
  if p_x = 'X'.
    wa_bdc-program  = p_2.
    wa_bdc-dynpro   = p_3.
    wa_bdc-dynbegin = p_x.
    append wa_bdc to ti_bdc.
  else.

    wa_bdc-fnam     = p_2.
    wa_bdc-fval     = p_3.
    append wa_bdc to ti_bdc.
  endif.

  clear wa_bdc.

endform.                    " F_LOAD_BDCDATA
